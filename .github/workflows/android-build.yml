name: Android APK Build (Branch Based)

on:
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "gradle"

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Ensure gradlew is executable
        run: chmod +x android/gradlew

      - name: Build APK / Bundle
        run: |
          if [[ "${GITHUB_REF##*/}" == "dev" ]]; then
            echo "➡️ Building Dev APK..."
            yarn buildAndroidDevApk
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "➡️ Building Staging APK..."
            yarn buildAndroidStagingApk
          elif [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "➡️ Building Prod APK and Bundle..."
            yarn buildAndroidProdApk
            yarn buildAndroidProdBundle
          fi

      - name: Locate APKs/Bundles
        id: find_outputs
        shell: bash
        run: |
          # Collect both APKs and Bundles
          OUTPUT_PATHS=$(ls -t android/app/build/outputs/{apk,bundle}/**/*.{apk,aab} 2>/dev/null || true)
          if [ -z "$OUTPUT_PATHS" ]; then
            echo "❌ No APK/AAB found!"
            exit 1
          fi
          echo "OUTPUT_PATHS=$OUTPUT_PATHS" >> $GITHUB_ENV
          echo "✅ Found outputs:"
          echo "$OUTPUT_PATHS"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: outputs-${{ github.ref_name }}
          path: ${{ env.OUTPUT_PATHS }}
          retention-days: 7
